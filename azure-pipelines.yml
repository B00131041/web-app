trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '4a01d2e9-19e1-417c-847c-6036aee46263'
  imageRepository: 'bwebapp'
  containerRegistry: 'ca2registry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

  # Environment variable for application
  PORT: '3000'

stages:
  - stage: Build
    displayName: Build and Push Stage
    jobs:
      - job: Build
        displayName: Build Docker Image and Push to ACR
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and Push Docker Image to Container Registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

  - stage: Deploy
    displayName: Deploy to Azure Container Instances (ACI)
    dependsOn: Build
    jobs:
      - job: Deploy
        displayName: Deploy Docker Image to ACI
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: AzureCLI@2
            displayName: Deploy Docker Container to ACI
            inputs:
              azureSubscription: $(dockerRegistryServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az container create \
                  --resource-group YourResourceGroupName \
                  --name bwebapp-container \
                  --image $(containerRegistry)/$(imageRepository):$(tag) \
                  --dns-name-label bwebapp-container \
                  --ports 80 \
                  --environment-variables PORT=$(PORT)
